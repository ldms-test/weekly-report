2023-01-19 01:54:50,544 __main__ INFO -- Get or create the cluster --
2023-01-19 01:54:50,544 TADA INFO starting test `updtr_add test`
2023-01-19 01:54:50,544 TADA INFO   test-id: 0879a0d3bca91d06cf0ad4871ca1d4d002cb216d8496271ee4a5cf6e9af86723
2023-01-19 01:54:50,544 TADA INFO   test-suite: LDMSD
2023-01-19 01:54:50,544 TADA INFO   test-name: updtr_add test
2023-01-19 01:54:50,544 TADA INFO   test-user: narate
2023-01-19 01:54:50,544 TADA INFO   commit-id: 67b8b3ec2ccb459a041d0536270405d0346c8f18
2023-01-19 01:54:58,565 __main__ INFO -- Start daemons --
2023-01-19 01:55:02,216 __main__ INFO Waiting ... for all LDMSDs to start
2023-01-19 01:55:02,531 __main__ INFO All LDMSDs are up.
2023-01-19 01:55:03,753 TADA INFO assertion 1, updtr_start with a negative interval: report(rc = 22) == expect(rc = 22), passed
2023-01-19 01:55:04,958 TADA INFO assertion 2, updtr_start with an alphabet interval: report(rc = 22) == expect(rc = 22), passed
2023-01-19 01:55:06,161 TADA INFO assertion 3, updtr_start with a negative offset: report(rc = 0) == expect(rc = 0), passed
2023-01-19 01:55:07,379 TADA INFO assertion 4, updtr_start with an alphabet offset: report(rc = 22) == expect(rc = 22), passed
2023-01-19 01:55:08,598 TADA INFO assertion 5, updtr_start without an offset larger than interval: report(rc = 22) == expect(rc = 22), passed
2023-01-19 01:55:11,045 TADA INFO assertion 6, updtr_start that changes offset to no offset: report(rc = 0, status = [{'name': 'offset2none', 'interval': '1000000', 'offset': '0', 'sync': 'false', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}]) == expect(rc = 0, status = [{'name': 'offset2none', 'interval': '1000000', 'offset': '0', 'sync': 'false', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': []}], failed
Traceback (most recent call last):
  File "updtr_start_test", line 343, in <module>
    .format(rc, status, 0, exp_updtr))
  File "/home/narate/cron/ldms-test/TADA.py", line 157, in assert_test
    raise AssertionException(self.test_desc + ", " + cond_str + ": FAILED")
TADA.AssertionException: Test updtr_add, report(rc = 0, status = [{'name': 'offset2none', 'interval': '1000000', 'offset': '0', 'sync': 'false', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}]) == expect(rc = 0, status = [{'name': 'offset2none', 'interval': '1000000', 'offset': '0', 'sync': 'false', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': []}]: FAILED
2023-01-19 01:55:11,046 TADA INFO assertion 7, updtr_start of a non-existing updater: skipped
2023-01-19 01:55:11,046 TADA INFO assertion 8, updtr_start with a valid interval: skipped
2023-01-19 01:55:11,046 TADA INFO assertion 9, updtr_start with a valid offset: skipped
2023-01-19 01:55:11,046 TADA INFO assertion 10, updtr_start without giving interval and offset: skipped
2023-01-19 01:55:11,047 TADA INFO assertion 11, updtr_start a running updater: skipped
2023-01-19 01:55:11,047 TADA INFO test updtr_add test ended
