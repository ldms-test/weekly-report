2024-12-23 05:45:32,043 __main__ INFO -- Get or create the cluster --
2024-12-23 05:45:32,044 TADA INFO starting test `updtr_add test`
2024-12-23 05:45:32,044 TADA INFO   test-id: 0c8fcf9e0c173b3805e1a94996e3c8e4f7dc15642ddc79dab32483ed8e47476b
2024-12-23 05:45:32,044 TADA INFO   test-suite: LDMSD
2024-12-23 05:45:32,044 TADA INFO   test-name: updtr_add test
2024-12-23 05:45:32,044 TADA INFO   test-user: narate
2024-12-23 05:45:32,044 TADA INFO   commit-id: 9c18084762007af2df7daece505df8c7169fe270
2024-12-23 05:45:48,441 __main__ INFO -- Start daemons --
2024-12-23 05:45:52,200 __main__ INFO Waiting ... for all LDMSDs to start
2024-12-23 05:45:52,528 __main__ INFO All LDMSDs are up.
2024-12-23 05:45:53,742 TADA INFO assertion 1, updtr_start with a negative interval: report(rc = 22) == expect(rc = 22), passed
2024-12-23 05:45:54,966 TADA INFO assertion 2, updtr_start with an alphabet interval: report(rc = 22) == expect(rc = 22), passed
2024-12-23 05:45:56,182 TADA INFO assertion 3, updtr_start with a negative offset: report(rc = 0) == expect(rc = 0), passed
2024-12-23 05:45:57,395 TADA INFO assertion 4, updtr_start with an alphabet offset: report(rc = 22) == expect(rc = 22), passed
2024-12-23 05:45:58,609 TADA INFO assertion 5, updtr_start without an offset larger than interval: report(rc = 22) == expect(rc = 22), passed
2024-12-23 05:46:01,036 TADA INFO assertion 6, updtr_start that changes offset to no offset: report(rc = 0, status = [{'name': 'offset2none', 'interval': '1000000', 'offset': '0', 'sync': 'false', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}]) == expect(rc = 0, status = [{'name': 'offset2none', 'interval': '1000000', 'offset': '0', 'sync': 'false', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}], passed
2024-12-23 05:46:02,260 TADA INFO assertion 7, updtr_start of a non-existing updater: report(rc = 2) == expect(rc = 2), passed
2024-12-23 05:46:04,710 TADA INFO assertion 8, updtr_start with a valid interval: report(rc = 0, status = [{'name': 'valid_int', 'interval': '2000000', 'offset': '100000', 'sync': 'true', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}]) == expect(rc = 0, status = [{'name': 'valid_int', 'interval': '2000000', 'offset': '100000', 'sync': 'true', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}], passed
2024-12-23 05:46:07,114 TADA INFO assertion 9, updtr_start with a valid offset: report(rc = 0, status = [{'name': 'valid_offset', 'interval': '1000000', 'offset': '200000', 'sync': 'true', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}]) == expect(rc = 0, status = [{'name': 'valid_offset', 'interval': '1000000', 'offset': '200000', 'sync': 'true', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}], passed
2024-12-23 05:46:09,562 TADA INFO assertion 10, updtr_start without giving interval and offset: report(rc = 0, status = [{'name': 'all', 'interval': '1000000', 'offset': '100000', 'sync': 'true', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}]) == expect(rc = 0, status = [{'name': 'all', 'interval': '1000000', 'offset': '100000', 'sync': 'true', 'mode': 'Pull', 'auto': 'false', 'state': 'RUNNING', 'producers': [], 'outstanding count': 0, 'oversampled count': 0}], passed
2024-12-23 05:46:10,775 TADA INFO assertion 11, updtr_start a running updater: report(rc = 16) == expect(rc = 16), passed
2024-12-23 05:46:10,776 __main__ INFO --- done ---
2024-12-23 05:46:10,776 TADA INFO test updtr_add test ended
